services:
  webapp:
    build:
      context: .
      dockerfile: MTU/Dockerfile
    ports:
      - "5000:8080"
    environment:
      - ConnectionStrings:DefaultConnection=Host=postgres;Port=5432;Database=MTUdb;Username=postgres;Password=153426
      - Jwt:Key=EstaÉUmaChaveMuitoSeguraComPeloMenos32Chars!
      - Jwt:Issuer=MTUApi
      - Jwt:Audience=MTUApiUsers
      - RabbitMQ:HostName=rabbitmq
      - RabbitMQ:UserName=guest
      - RabbitMQ:Password=guest
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: MTUdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 153426
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  postgres_data:
  rabbitmq_data: